{"version":3,"sources":["constants.js","reducers.js","components/Card/Card.js","components/CardList/CardList.js","components/SearchBox/SearchBox.js","components/Scroll/Scroll.js","container/App.js","actions.js","reportWebVitals.js","index.js"],"names":["CHANGE_SEARCHFIELD","REQUEST_HUMANS_PENDING","REQUEST_HUMANS_SUCCESS","REQUEST_HUMANS_FAILED","initialStateSearch","searchfield","initialStateHumans","isPending","humans","error","Card","id","name","email","phone","website","className","alt","src","CardList","cardArray","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","children","App","this","onRequestHumans","filtredHumans","filter","human","toLowerCase","includes","onSearchChange","Component","connect","state","searchHumans","requestHumans","dispatch","event","text","target","value","payload","fetch","then","response","json","users","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cac980eb.chunk.js","sourcesContent":["export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\r\n\r\nexport const REQUEST_HUMANS_PENDING = 'REQUEST_HUMANS_PENDING';\r\nexport const REQUEST_HUMANS_SUCCESS = 'REQUEST_HUMANS_SUCCESS';\r\nexport const REQUEST_HUMANS_FAILED = 'REQUEST_HUMANS_FAILED';","import {\r\n  CHANGE_SEARCHFIELD,\r\n  REQUEST_HUMANS_PENDING,\r\n  REQUEST_HUMANS_SUCCESS,\r\n  REQUEST_HUMANS_FAILED\r\n} from './constants.js';\r\n\r\nconst initialStateSearch = {\r\n  searchfield: ''\r\n}\r\n\r\nexport const searchHumans = (state=initialStateSearch, action={}) => {\r\n  switch(action.type){\r\n    case CHANGE_SEARCHFIELD:\r\n      return Object.assign({}, state, {searchfield: action.payload});\r\n      // or\r\n      // return { ...state, {searchfield: action.payload }};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst initialStateHumans = {\r\n  isPending: false,\r\n  humans: [],\r\n  error: ''\r\n}\r\n\r\nexport const requestHumans = (state=initialStateHumans, action={}) => {\r\n  switch(action.type){\r\n    case REQUEST_HUMANS_PENDING:\r\n      return Object.assign({}, state, {isPending: true})\r\n    case REQUEST_HUMANS_SUCCESS:\r\n      return Object.assign({}, state, {humans: action.payload, isPending: false})\r\n    case REQUEST_HUMANS_FAILED:\r\n      return Object.assign({}, state, {error: action.payload, isPending: false})\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\r\n\r\nconst Card = ({ id, name, email, phone, website }) => {\r\n  return (\r\n    <div className=\"tc grow bg-light-purple br2 shadow-3 ma3 pa3 br3 bw2 dib\">\r\n      <img alt='human' src={`https://robohash.org/${id}?set=set5&size=150x150`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n        <p>{phone}</p>\r\n        <p>{website}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../Card/Card';\r\n\r\nconst CardList = ({ humans }) => {\r\n  const cardArray = humans.map((user, i) => {\r\n    return <Card \r\n      key={i}\r\n      id={humans[i].id}\r\n      name={humans[i].name}\r\n      email={humans[i].email}\r\n      phone={humans[i].phone}\r\n      website={humans[i].website}\r\n      />\r\n  });\r\n  return (\r\n    <div>\r\n      {cardArray}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--black bg-light-purple'\r\n        type='search'\r\n        placeholder='search humans'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport './Scroll.css';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div className=\"scroll-box\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CardList from '../components/CardList/CardList';\r\nimport SearchBox from '../components/SearchBox/SearchBox';\r\nimport Scroll from '../components/Scroll/Scroll';\r\nimport { setSearchfield, requestHumans } from '../actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchfield: state.searchHumans.searchfield,\r\n    humans: state.requestHumans.humans,\r\n    isPending: state.requestHumans.isPending,\r\n    error: state.requestHumans.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchfield(event.target.value)),\r\n    onRequestHumans: () => dispatch(requestHumans())\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  \r\n  componentDidMount() {\r\n    this.props.onRequestHumans();\r\n  }\r\n\r\n\r\n  render() {\r\n    const filtredHumans = this.props.humans.filter(human => {\r\n      return human.name.toLowerCase().includes(this.props.searchfield.toLowerCase());\r\n    })\r\n    return this.props.isPending ? \r\n      <h1>Loading</h1> :\r\n      (\r\n        <div className='tc'>\r\n          <h1 className='f1'>Humans-Friends</h1>\r\n          <SearchBox searchChange={this.props.onSearchChange}/>\r\n          <Scroll>\r\n            <CardList humans={filtredHumans}/>\r\n          </Scroll>\r\n        </div>    \r\n      );  \r\n  }\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {\r\n  CHANGE_SEARCHFIELD,\r\n  REQUEST_HUMANS_PENDING,\r\n  REQUEST_HUMANS_SUCCESS,\r\n  REQUEST_HUMANS_FAILED\r\n} from './constants.js';\r\n\r\nexport const setSearchfield = (text) => ({\r\n  type: CHANGE_SEARCHFIELD,\r\n  payload: text\r\n})\r\n\r\nexport const requestHumans = () => (dispatch) => {\r\n  dispatch({ type: REQUEST_HUMANS_PENDING});\r\n  fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users => dispatch({type: REQUEST_HUMANS_SUCCESS, payload: users}))\r\n    .catch(error => dispatch({type: REQUEST_HUMANS_FAILED, payload: error}))\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport {createLogger} from 'redux-logger';\r\nimport {searchHumans, requestHumans} from './reducers';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport './index.css';\r\nimport App from './container/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nconst logger = createLogger();\r\nconst rootReducer = combineReducers({searchHumans, requestHumans})\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}